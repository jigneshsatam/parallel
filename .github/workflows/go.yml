name: Build

on: [push, pull_request]

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['1.10.x', '1.11.x', '1.12.x', '1.13.x', '1.14.x', '1.15.x', '1.16.x', '1.17.x', '1.18.x', '1.19.x']

    env:
      GO111MODULE: on

    steps:

      - uses: actions/checkout@v3

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        run: go build -v ./...

  test:

    needs: [ build ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['1.10.x', '1.11.x', '1.12.x', '1.13.x', '1.14.x', '1.15.x', '1.16.x', '1.17.x', '1.18.x', '1.19.x']

    env:
      GO111MODULE: on

    steps:

      - uses: actions/checkout@v3

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Test with the Go CLI
        run: go test -race -v -coverprofile c.out ./...

  coverage:

    needs: [ test ]

    env:
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Coverage
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

          go test ./... -coverprofile c.out

          ./cc-test-reporter after-build -p github.com/JigneshSatam/parallel
